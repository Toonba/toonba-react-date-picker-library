"use strict";
self["webpackHotUpdatetoonba_react_date_picker_library"]("stories-Button-stories",{

/***/ "./src/components/DatePicker/DatePicker.jsx":
/*!**************************************************!*\
  !*** ./src/components/DatePicker/DatePicker.jsx ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DatePicker: () => (/* binding */ DatePicker)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Calendar_Calendar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Calendar/Calendar */ "./src/components/Calendar/Calendar.jsx");
Object(function webpackMissingModule() { var e = new Error("Cannot find module 'styled-components'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");




// DatePicker Style



const PickerWrapper = Object(function webpackMissingModule() { var e = new Error("Cannot find module 'styled-components'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())`
  margin: 50px auto;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
`;
const DatePickerInput = Object(function webpackMissingModule() { var e = new Error("Cannot find module 'styled-components'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())`
  width: ${props => props.customStyle.inputWidth};
  padding: 5px;
  background-color: ${props => props.customStyle.inputBackground};
  text-align: center;
  position: relative;
  border: 1px solid black;
  border-radius: 5px;
  margin: 0px auto;
  color: ${props => props.customStyle.textColor};
  position: relative;

  :focus {
    outline: solid 1px ${props => props.customStyle.primaryColor};
    border: solid 1px ${props => props.customStyle.primaryColor};
  }

  .hide {
    display: none;
  }
`;

/**
 *
 * @param {Date} maxDate maximum date it will be possible to reach with datePicker, you can change it in config.js
 * @param {Date} minDate minimum date it will be possible to reach with datePicker, you can change it in config.js
 * @param {Object} style regroup few parameter that can be easily changed to adjust component, you can change it in config.js
 * @param {function} getData callback function to pass to the component to be able to access the selected. /!\argument of this function will be an object Date s
 * @returns {Component} datePicker
 */

function DatePicker({
  maxDate,
  minDate,
  customStyle,
  getData
}) {
  //Check to ensure user didn't made mistake with min and max Date
  if (minDate > maxDate) {
    alert('ProblÃ¨me minDate > maxDate');
  }
  const [isOpen, setIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [inputValue, setInputValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const [selectedDate, setSelectedDate] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const datePickerContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);

  // function handling when calendar should be hidden
  const openClose = () => {
    setIsOpen(!isOpen);
  };
  const handleClickOutside = e => {
    if (datePickerContainerRef.current && !datePickerContainerRef.current.contains(e.target)) {
      setIsOpen(false);
    }
  };
  const handleDateSelection = selectedValue => {
    setInputValue(selectedValue.toLocaleDateString());
    setSelectedDate(selectedValue);
    getData(selectedValue);
  };
  const handleCloseCalendar = () => {
    if (inputValue === '') {
      alert('please select a date');
    } else {
      setIsOpen(false);
      console.log(selectedDate);
    }
  };
  const handleCancelButton = () => {
    setInputValue('');
    setSelectedDate('');
    setIsOpen(false);
  };
  const handleChange = event => {
    setInputValue(event.target.value);
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    document.addEventListener('click', handleClickOutside);
    return () => {
      document.removeEventListener('click', handleClickOutside);
    };
  }, []);
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment, {
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(PickerWrapper, {
      ref: datePickerContainerRef,
      className: "datePicker-container",
      customStyle: customStyle,
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(DatePickerInput, {
        type: "text",
        onClick: openClose,
        onChange: handleChange,
        value: inputValue,
        customStyle: customStyle
      }), isOpen === true ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(Calendar, {
        maxDate: maxDate,
        minDate: minDate,
        onSelection: handleDateSelection,
        onClose: handleCloseCalendar,
        onCancel: handleCancelButton,
        customStyle: customStyle,
        isSelected: selectedDate
      }) : null]
    })
  });
}
DatePicker.__docgenInfo = {
  "description": "@param {Date} maxDate maximum date it will be possible to reach with datePicker, you can change it in config.js\n@param {Date} minDate minimum date it will be possible to reach with datePicker, you can change it in config.js\n@param {Object} style regroup few parameter that can be easily changed to adjust component, you can change it in config.js\n@param {function} getData callback function to pass to the component to be able to access the selected. /!\\argument of this function will be an object Date s\n@returns {Component} datePicker",
  "methods": [],
  "displayName": "DatePicker"
};

/***/ })

});
//# sourceMappingURL=stories-Button-stories.02abaf1b4ab4ffb0dd9e.hot-update.js.map